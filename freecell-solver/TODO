* More general state_ia_alloc() mechanism

* Add more fcs_ and FCS_ prefixes to the macros and globals.

* Write a multi-threaded version and see if it runs ok.

* Create the ability for multiple threads to operate on the same prev_states
collection.

* Port to Java (?)

* Integrate into GNOME Freecell and/or GNOME AisleRiot and/or KDE Patience
and/or PySol.

* Code algorithms for similiar solitaire games. (maybe a perl program that 
generates C code). - DONE partialy

* Comment the code.

* Add a switch to ask the user if he wants to continue and enter a bigger 
iterations limit.

* Add a more verbose preset error handling. 
(explain why it could not be applied).

* Load and save instances to the disk.

* Add documentation about the new switches in USAGE.

* Implement the indirect stack storage as a libavl/libredblack tree.

* Implement BFS and A* (and Minimax, and others?). Which technique can be 
specified in the command line (including DFS and Soft-DFS).

* Check for unmalloced data and if so gracefully exit.

* Replace the two varying state storage macros with one consistent 
integer like that of the stack storage.